/*******************************************************************************
 * Copyright 2017 Talentica Software Pvt. Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
package com.talentica.hungryHippos.master.util;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Map;

import org.apache.commons.lang3.SerializationUtils;

import com.talentica.hungryHippos.utility.MapUtils;

/**
 * {@code SerializedFileReader} is a utility to read key node number map and few other files which are generated by
 * application and saved in serialized form on servers.
 * 
 * @author nitink
 *
 */
public class SerializedFileReader {

  public static void main(String[] args) throws IOException {
    if (args.length != 2) {
      System.out.println(
          "Usage pattern: java -jar <jar name> <input file path> <readable output file path> e.g. java -jar Utility.jar ./serialized_data_0 ./readable_data_0");
      System.exit(0);
    }
    File dataFile = new File(args[0]);
    FileInputStream fileInputStream = new FileInputStream(dataFile);
    Object deserializedObject = SerializationUtils.deserialize(fileInputStream);
    fileInputStream.close();

    File readableDataFile = new File(args[1]);
    FileWriter fileWriter = new FileWriter(readableDataFile);
    if (deserializedObject != null) {
      if (deserializedObject instanceof Map) {
        fileWriter.write(MapUtils.getFormattedString((Map) deserializedObject));
      } else {
        fileWriter.write(deserializedObject.toString());
      }
    }
    fileWriter.flush();
    fileWriter.close();
  }

}
